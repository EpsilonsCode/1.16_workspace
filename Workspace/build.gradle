buildscript {
    repositories {
        maven { url "https://files.minecraftforge.net/maven" }
        maven { url "https://maven.parchmentmc.org" }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.parchmentmc:librarian:1.+'
        classpath "com.wynprice.cursemaven:CurseMaven:2.1.1"
        classpath 'org.spongepowered:mixingradle:0.7.+'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply from: 'https://raw.githubusercontent.com/SizableShrimp/Forge-Class-Remapper/main/classremapper.gradle'
apply plugin: 'org.spongepowered.mixin'
//apply plugin: "com.wynprice.cursemaven"
repositories {
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }



    maven { url 'https://www.dogforce-games.com/maven/' }
    maven { // TOP
        name 'tterrag maven'
        url "https://maven.tterrag.com/"
    }
    maven { // JEI
        url "https://dvs1.progwml6.com/files/maven"
    }
    maven {
        url "https://maven.mcmoddev.com"
    }
}

version = '1.0'
group = 'com.yourname.modid' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'modid'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)
//sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings  channel: mappings_channel, version: mappings_date + '-' + minecraft_version
    //mappings channel: 'official', version: '1.17.1'
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    // accessTransformer = file('build/resources/main/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            setIdeaModule("Main_workspace.Workspace.main")
            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {

                Animancy {
                    source project(':Animancy').sourceSets.main
                }

                //TheOneProbe {
                    //source project(':TheOneProbe').sourceSets.main
                //}
                //McJtyLib {
                    //source project(':McJtyLib').sourceSets.main
                //}
                //Ariente {
                    //source project(':Ariente').sourceSets.main
                //}
                //ArienteWorld {
                    //source project(':ArienteWorld').sourceSets.main
                //}
                //DeepResonance {
                    //source project(':DeepResonance').sourceSets.main
                //}
                //HoloGui {
                    //source project(':HoloGui').sourceSets.main
                //}

                //RFToolsStorage {
                    //source project(':RFToolsStorage').sourceSets.main
                //}
                //RFToolsBase {
                    //source project(':RFToolsBase').sourceSets.main
                //}
                //RFToolsControl {
                    //source project(':RFToolsControl').sourceSets.main
                //}
                //RFToolsDimensions {
                    //source project(':RFToolsDimensions').sourceSets.main
                //}
                //RFToolsPower {
                    //source project(':RFToolsPower').sourceSets.main
                //}
                //RFToolsBuilder {
                    //source project(':RFToolsBuilder').sourceSets.main
                //}
                //RFToolsUtility {
                    //source project(':RFToolsUtility').sourceSets.main
                //}
                //Restrictions {
                    //source project(':Restrictions').sourceSets.main
                //}
                //LostCities {
                    //source project(':LostCities').sourceSets.main
                //}
                //ModXNet {
                    //source project(':ModXNet').sourceSets.main
                //}
            }
        }

        server {
            workingDirectory project.file('run')
            properties 'mixin.env.disableRefMap': 'true'
            setIdeaModule("Main_workspace.Workspace.main")
            // Recommended logging data for a userdev environment
            // property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            // property 'forge.logging.console.level', 'debug'

            mods {

                Animancy {
                    source project(':Animancy').sourceSets.main
                }

                //TheOneProbe {
                    //source project(':TheOneProbe').sourceSets.main
                //}
                //McJtyLib {
                    //source project(':McJtyLib').sourceSets.main
                //}
                //Ariente {
                    //source project(':Ariente').sourceSets.main
                //}
                //ArienteWorld {
                    //source project(':ArienteWorld').sourceSets.main
                //}
                //DeepResonance {
                    //source project(':DeepResonance').sourceSets.main
                //}
                //HoloGui {
                    //source project(':HoloGui').sourceSets.main
                //}

                //RFToolsStorage {
                    //source project(':RFToolsStorage').sourceSets.main
                //}
                //RFToolsBase {
                    //source project(':RFToolsBase').sourceSets.main
                //}
                //RFToolsControl {
                    //source project(':RFToolsControl').sourceSets.main
                //}
                //RFToolsDimensions {
                    //source project(':RFToolsDimensions').sourceSets.main
                //}
                //RFToolsPower {
                    //source project(':RFToolsPower').sourceSets.main
                //}
                //RFToolsBuilder {
                    //source project(':RFToolsBuilder').sourceSets.main
                //}
                //RFToolsUtility {
                    //source project(':RFToolsUtility').sourceSets.main
                //}
                //Restrictions {
                    //source project(':Restrictions').sourceSets.main
                //}
                //LostCities {
                    //source project(':LostCities').sourceSets.main
                //}
                //ModXNet {
                    //source project(':ModXNet').sourceSets.main
                //}
            }
        }

        data {
            workingDirectory project.file('run')
            properties 'mixin.env.disableRefMap': 'true'
            setIdeaModule("Main_workspace.Workspace.main")
            // Recommended logging data for a userdev environment
            // property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            // property 'forge.logging.console.level', 'debug'
            args '--mod', 'examplemod', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {

                Animancy {
                    source project(':Animancy').sourceSets.main
                }

                //TheOneProbe {
                    //source project(':TheOneProbe').sourceSets.main
                //}
                //McJtyLib {
                    //source project(':McJtyLib').sourceSets.main
                //}
                //Ariente {
                    //source project(':Ariente').sourceSets.main
                //}
                //ArienteWorld {
                    //source project(':ArienteWorld').sourceSets.main
                //}
                //DeepResonance {
                    //source project(':DeepResonance').sourceSets.main
                //}
                //HoloGui {
                    //source project(':HoloGui').sourceSets.main
                //}

                //RFToolsStorage {
                    //source project(':RFToolsStorage').sourceSets.main
                //}
                //RFToolsBase {
                    //source project(':RFToolsBase').sourceSets.main
                //}
                //RFToolsControl {
                    //source project(':RFToolsControl').sourceSets.main
                //}
                //RFToolsDimensions {
                    //source project(':RFToolsDimensions').sourceSets.main
                //}
                //RFToolsPower {
                    //source project(':RFToolsPower').sourceSets.main
                //}
                //RFToolsBuilder {
                    //source project(':RFToolsBuilder').sourceSets.main
                //}
                //RFToolsUtility {
                    //source project(':RFToolsUtility').sourceSets.main
                //}
                //Restrictions {
                    //source project(':Restrictions').sourceSets.main
                //}
                //LostCities {
                    //source project(':LostCities').sourceSets.main
                //}
                //ModXNet {
                    //source project(':ModXNet').sourceSets.main
                //}
            }
        }
    }
}

task updateForgeVersion {
    group 'custom'
    doFirst {
        URL url = new URL("https://files.minecraftforge.net/net/minecraftforge/forge/index_" + minecraft_version + ".html");
        HttpURLConnection con = (HttpURLConnection) url.openConnection();
        con.setRequestMethod("GET");
        BufferedReader reader = new BufferedReader(new InputStreamReader(con.getInputStream()))
        String inputLine;
        StringBuffer response = new StringBuffer();

        while ((inputLine = reader.readLine()) != null) {
            response.append(inputLine);
        }
        reader.close();
        def var = new Properties()
        def value = response.toString().indexOf("Download Latest")
        def printer = response.toString().substring(value, value + 150)
        value = printer.indexOf(minecraft_version)
        def endVaule = printer.indexOf("</small>")
        printer = printer.substring(value, endVaule).replace(minecraft_version + " - ", "")
        // print result
        // System.out.println(printer);
        File myfile = file("gradle.properties");

        var.load(myfile.newDataInputStream())
        var.setProperty("forge_version", printer)
        var.store(myfile.newWriter(), null)

    }
}

task updateParchmentVersion {
    group 'custom'
    doFirst {
        URL url = new URL("https://github.com/ParchmentMC/Parchment/tags");
        HttpURLConnection con = (HttpURLConnection) url.openConnection();
        con.setRequestMethod("GET");
        BufferedReader reader = new BufferedReader(new InputStreamReader(con.getInputStream()))
        String inputLine;
        StringBuffer response = new StringBuffer();

        while ((inputLine = reader.readLine()) != null) {
            response.append(inputLine);
        }
        reader.close();
        def var = new Properties()
        def value = response.toString().indexOf(minecraft_version)
        def printer = response.toString().substring(value, value + 30)
        value = printer.indexOf(minecraft_version)

        def endVaule = printer.indexOf("\" data")
        printer = printer.substring(value, endVaule).replace(minecraft_version + "-", "")
        // print result
        // System.out.println(printer);
        File myfile = file("gradle.properties");
        System.out.println(printer)
        var.load(myfile.newDataInputStream())
        var.setProperty("mappings_date", printer)
        var.store(myfile.newWriter(), null)

    }
}

dependencies {
    // Specify the version of Minecraft to use, If this is any group other then 'net.minecraft' it is assumed
    // that the dep is a ForgeGradle 'patcher' dependency. And it's patches will be applied.
    // The userdev artifact is a special name and will get all sorts of transformations applied to it.

    //minecraft 'net.minecraftforge:forge:1.17.1-37.0.15'
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    //compileOnly fg.deobf("mezz.jei:jei-${minecraft_version}:${jei_version}:api")
    //runtimeOnly fg.deobf("mezz.jei:jei-${minecraft_version}:${jei_version}")
    //implementation fg.deobf("vazkii.patchouli:Patchouli:${patchouli_version}") {
    //    transitive = false
    //}
    //implementation fg.deobf("net.darkhax.bookshelf:Bookshelf-1.16.4:9.3.18")
    //implementation fg.deobf("net.darkhax.gamestages:GameStages-1.16.4:6.0.1")

    implementation project(':Animancy')
    //compile fg.deobf("nl.elec332.core:eleccore:${minecraft_version}-2.1.47-Beta")

//    compile fg.deobf("nl.elec332.core:ElecCore:${minecraft_version}-${eleccore_version}")

//    compile fg.deobf("curse.maven:wildnature:2837635")
//    compile fg.deobf("curse.maven:voxelmap:2765032")
//    compile fg.deobf("curse.maven:minimap:2849263")
//    compile fg.deobf("curse.maven:xaero:2836597")

    //compile project(':TheOneProbe')
    //compile project(':McJtyLib')
    //compile project(':Ariente')
    //compile project(':ArienteWorld')
    //compile project(':DeepResonance')
    //compile project(':HoloGui')

    //compile project(':LostCities')
    //compile project(':RFToolsStorage')
    //compile project(':RFToolsBase')
    //compile project(':RFToolsControl')
    //compile project(':RFToolsDimensions')
    //compile project(':RFToolsPower')
    //compile project(':RFToolsBuilder')
    //compile project(':RFToolsUtility')
    //compile project(':Restrictions')
    //compile project(':ModXNet')

    // You may put jars on which you depend on in ./libs or you may define them like so..
    // compile "some.group:artifact:version:classifier"
    // compile "some.group:artifact:version"

    // Real examples
    // compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    // compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // The 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
    // provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // These dependencies get remapped to your current MCP mappings
    // deobf 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // For more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
            "Specification-Title": "examplemod",
            "Specification-Vendor": "examplemodsareus",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"examplemodsareus",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// Example configuration to allow publishing using the maven-publish task
// we define a custom artifact that is sourced from the reobfJar output task
// and then declare that to be published
// Note you'll need to add a repository here
def reobfFile = file("$buildDir/reobfJar/output.jar")
def reobfArtifact = artifacts.add('default', reobfFile) {
    type 'jar'
    builtBy 'reobfJar'
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact reobfArtifact
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}
